#!/bin/bash

# выйти, если какая-либо команда не удалась
set -e

if (( $# < 2 )); then
    echo "Недопустимое количество параметров, использование: venv-install <PACKAGE> <COMMAND> [ARGS]"
    exit 1
fi
 
PACKAGE=$1
COMMAND=$2
ARGS=${@:3}

#echo "package: $PACKAGE"
#echo "command: $COMMAND"
#echo "args: $ARGS"

VENV_PATH=~/.venvs/$PACKAGE
ACTIVATE_SCRIPT=$VENV_PATH/bin/activate
VENV_BIN_PATH=$VENV_PATH/bin/$COMMAND
BIN_PATH=$HOME/.local/bin
COMMAND_BIN_PATH=$BIN_PATH/$COMMAND

echo "Installing '$COMMAND@$PACKAGE' ..."

# проверить, существует ли venv
if test -d "$VENV_PATH"; then
  :
else
  # создать новый venv
  echo "Создание нового venv '$VENV_PATH' ..."
  mkdir -p $VENV_PATH
  python3 -m venv $VENV_PATH
fi

# переключить на venv
source "$ACTIVATE_SCRIPT"

# проверяем, установлен ли пакет
if [[ $(pip freeze | grep $PACKAGE) ]]; then
    :
    # Проверить обновления?

else
    # проверяем, существует ли пакет
    #if [[ $(pip search $PACKAGE | cut -d' ' -f1 | grep "^${PACKAGE}\$") ]]; then
    #  # всё хорошо
    #  :
    #else
    #  echo "Пакет PyPi с именем '$PACKAGE' не найден"
    #  deactivate
    #  exit 1
    #fi

    echo "Установка пакета '$PACKAGE' ..."
    pip install --upgrade pip
    pip install "$PACKAGE"
fi

deactivate

# проверить, существует ли путь "bin"
if test -d "$BIN_PATH"; then
  :
else
  # создаем путь к bin
  echo "Создание '$BIN_PATH' ..."
  mkdir -p $BIN_PATH
fi

# проверить, доступен ли скрипт /usr/bin
if test -f "$COMMAND_BIN_PATH"; then
  :
else
  # создаем симлинк на "binary"
  echo "Создание символической ссылки '$COMMAND_BIN_PATH' в $BIN_PATH..."
  ln -s "$VENV_BIN_PATH" "$COMMAND_BIN_PATH"
  chmod +x "$COMMAND_BIN_PATH"
fi
